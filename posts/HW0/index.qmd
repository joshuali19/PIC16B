---
title: "HW0"
author: "Joshua Li"
date: "2023-01-23"
categories: [code, analysis]
## image: "image.jpg"
jupyter: pic16b
---

This post will go through the basics of creating a descriptive data visualization step-by-step. By the end of this post, you will be able to

1. decide the data to visualize
2. determine the best fit for visualizing said data
3. create a basic visualization
4. label the visualization effectively
5. subset by different groups
6. extract insights from the visualization

## Preprocessing

First, in order to create the visualization, we need the proper data to visualize. For this post, we will be using a dataset regarding penguins, given from a specified website referenced within the code.

```{python}
import pandas as pd
import numpy as np
url = "https://raw.githubusercontent.com/PhilChodrow/PIC16B/master/datasets/palmer_penguins.csv"
penguins = pd.read_csv(url)
```

When looking to create a good data visualization, it is essential to look at the data to get a good sense of what you are working with.

```{python}
print(penguins.shape)
penguins.head()
```

Since this is not necessarily a data cleaning post, I will not explain too much about what to look out for, but the code will be provided for you to look through.
```{python}
#| code-fold: true
# change the species column
penguins['Species'] = penguins['Species'].str.split().str.get(0)
# drop NAs corresponding to culmen length or depth
p_cleaned = penguins.dropna(subset=['Culmen Length (mm)', 'Culmen Depth (mm)'])

p_cleaned = p_cleaned[p_cleaned.Sex != '.'] # other data cleaning

# subset by useful data
penguins = p_cleaned[['Species',
'Culmen Length (mm)',
   'Culmen Depth (mm)',
   'Flipper Length (mm)',
   'Body Mass (g)',
   'Delta 15 N (o/oo)',
   'Delta 13 C (o/oo)']]
```

Once you have clean data, you can move on to the visualization process. 

## Visualization

### 1. Decide on what data you want to visualize

It may be helpful to look at some bivariate summary statistics to help gauge any particular interest with specific variables. This will avoid unnecessary time looking at uninformative visualizations.

```{python}
# creates summary statistics of numeric variables by species
penguins.groupby(['Species']).aggregate([np.mean, np.std])
```

Within this table, I look for any distinct differences that might differentiate certain groups of penguins from others. This can be done with any type of grouping (with `Island` and any other categorical variable).

We see that within each sex, there seems to be a clear distinction with Adelie penguins from the other two species with regard to `Culmen Length`. We also see this similar distinction with Gentoo penguins and the other two with regards to `Culmen Depth`.

I would encourage you to form more tables if you would like to find more insights, but for the purposes of this demonstration, this is sufficient information to create a visualization based on `Culmen Length` and `Culmen Depth`.

### 2. What is the best type of visualization (for your data)?

Objectively, the best visualization is a pie chart (just kidding). Each type of visualization serves its own purpose given the type of data you want to visualize. Here are some pointers for which visualization to use for different data.

#### Scatter plots

Scatter plots are most useful with two continuous variables, as it seeks to plot points within a 2-dimensional grid. This will match what we want to visualize with `Culmen Length (mm)` and `Culmen Depth (mm)`.

#### Bar plots, box plots

Both bar and box plots are most useful when you are graphing a continuous variable with a categorical variable. One of the axis will denote the categories, while the other will display the length (or spread) corresponding to the continuous variable.

#### Tables
These are helpful with categorical data, seeing if there is any correlation, or displays the relative frequency of the data.

#### Histograms
This is helpful in a univariate and bivariate setting. Both display the data in sets of bins that will display the distribution of data among those points. The data can be discrete or continuous, but the axes will always be coerced to categorical bins.

There are a bunch of different plot types, which I will not go more in depth about, but please explore on the official documentation of [`matplotlib`](https://matplotlib.org/stable/plot_types/index.html), [`plotly`](https://plotly.com/python-api-reference/plotly.express.html) or any other plotting software that you might use.

### 3. Create your visualization
For this example, we will use `matplotlib` to create my visualization. As stated above, we will use a scatter plot to display this information. The necessary parameters for a scatter plot are the data that will into the x and the y axis.

```{python}
from matplotlib import pyplot as plt

# create a scatter plot by culmen length and culmen depth
fig, ax = plt.subplots(1)
ax.scatter(penguins['Culmen Length (mm)'], penguins['Culmen Depth (mm)'])
plt.show()
```

This fulfills the requirement of plotting. However, if someone was given this visualization, it would be completely uninformative. What are the axes measuring? In what unit? What does each point represent? We need to add some informative labels and narrative text that best describes this.

### 4. Label the visualization
```{python}
# create a scatter plot by culmen length and culmen depth
fig, ax = plt.subplots(1)
ax.scatter(penguins['Culmen Length (mm)'], penguins['Culmen Depth (mm)'])

# add labels
ax.set(xlabel = 'Culmen Length (mm)', ylabel = 'Culmen Depth (mm)',
title = "Relationship between Penguin Culmen Depth and Length")
plt.show()
```

Nice! We have some points on a grid that represent `Culmen Length` and `Culmen Depth`. What does this visualization tell us about the relationship between the two variables? At a first glance, it seems like there is no real indicator of any correlation between the two. Recall the information that we learned about from the summary statistics. There were differences seen when separated by the `Species`. Let us implement the first through some color contrast, which can be done through adding parameters to the `plt.scatter()` function.

### 5. Subset the data by groups
```{python}

# create a scatter plot by culmen length and culmen depth
fig, ax = plt.subplots(1)
# for each species, map out the culmen length/depth of each penguin
for speci in penguins['Species'].unique():
    ax.scatter(penguins['Culmen Length (mm)'][penguins['Species'] == speci],
     penguins['Culmen Depth (mm)'][penguins['Species'] == speci])

# add labels
ax.set(xlabel = 'Culmen Length (mm)', ylabel = 'Culmen Depth (mm)',
title = "Relationship between Penguin Culmen Depth and Length")
plt.show()
```

How do we know which color corresponds to each species? We now need to add a legend.

```{python}
# create a scatter plot by culmen length and culmen depth
fig, ax = plt.subplots(1)
# for each species, map out the culmen length/depth of each penguin
for speci in penguins['Species'].unique():
    ax.scatter(penguins['Culmen Length (mm)'][penguins['Species'] == speci],
     penguins['Culmen Depth (mm)'][penguins['Species'] == speci],
     label = speci) # added label to specify each species

# add labels
ax.set(xlabel = 'Culmen Length (mm)', ylabel = 'Culmen Depth (mm)',
title = "Relationship between Penguin Culmen Depth and Length")

# adds a legend, which automatically is displayed if "label" is set in ax.scatter
ax.legend()
plt.show()
```

### 6. How does this inform people?
Great! You have now created your first data visualization! However, a pretty visualization means nothing unless you can draw insight out of it. How does this visualization help further your analysis? How would the readers interpret this graphic?

In this example, we have visualized the relationship between `Culmen Length` and `Culmen Depth` for penguins by species. The clustering within each group suggests that there may be some boundaries (with error) that could accurately assess the species of a penguin through these two traits. This can lead down the path of creating more visualizations to be exhaustive with your search, or to perhaps create a model.

## Conclusion
Through this post, you have learned how to create a visualization. I would highly encourage you to explore more of this Palmer penguins data set. Experiment with different columns and plot types to see what other insights you can extract and share with the world!
